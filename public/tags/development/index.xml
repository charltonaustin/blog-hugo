<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>development on Charlton Austin</title>
    <link>https://charltonaustin.com/tags/development/</link>
    <description>Recent content in development on Charlton Austin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 25 Mar 2020 09:03:54 -0400</lastBuildDate>
    
	<atom:link href="https://charltonaustin.com/tags/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Applications Integrating On The Database</title>
      <link>https://charltonaustin.com/posts/applications-integrating-on-the-database/</link>
      <pubDate>Wed, 25 Mar 2020 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/applications-integrating-on-the-database/</guid>
      <description>The problem You shouldn&amp;rsquo;t do it. You&amp;rsquo;ve read it before. Don&amp;rsquo;t integrate applications on the database. The advice is relatively straightforward, but it can often be difficult to understand. My first piece of advice is that when you have a new process it should have it&amp;rsquo;s own database. While the overhead is often real, it is minimal compared to the pain caused when you want to pull the two processes apart later.</description>
    </item>
    
    <item>
      <title>Repo Scripts And Autoupdates</title>
      <link>https://charltonaustin.com/posts/repo-scripts-and-autoupdates/</link>
      <pubDate>Wed, 26 Feb 2020 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/repo-scripts-and-autoupdates/</guid>
      <description>The problem You really want to make sure that unit tests are run every time someone commits.
The solution Three simple scripts. The first should be run by all engineers that join the team. It should do most of the installs for environment dependencies. The second should be a pre-commit script. This script should run your tests and anything else that you want to have happen. The third script should be an update script.</description>
    </item>
    
    <item>
      <title>Euler Problem 026</title>
      <link>https://charltonaustin.com/posts/euler-problem-026/</link>
      <pubDate>Mon, 19 Aug 2019 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/euler-problem-026/</guid>
      <description>The problem A unit fraction contains 1 in the numerator. The decimal representation of the unit fractions with denominators 2 to 10 are given:
1/2	= 0.5 1/3	= 0.(3) 1/4	= 0.25 1/5	= 0.2 1/6	= 0.1(6) 1/7	= 0.(142857) 1/8	= 0.125 1/9	= 0.(1) 1/10	= 0.1  Where 0.1(6) means 0.166666&amp;hellip;, and has a 1-digit recurring cycle. It can be seen that 1/7 has a 6-digit recurring cycle.</description>
    </item>
    
    <item>
      <title>Euler Problem 023</title>
      <link>https://charltonaustin.com/posts/euler-problem-023/</link>
      <pubDate>Wed, 31 Jul 2019 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/euler-problem-023/</guid>
      <description>The problem A perfect number is a number for which the sum of its proper divisors is exactly equal to the number. For example, the sum of the proper divisors of 28 would be 1 + 2 + 4 + 7 + 14 = 28, which means that 28 is a perfect number.
A number n is called deficient if the sum of its proper divisors is less than n and it is called abundant if this sum exceeds n.</description>
    </item>
    
    <item>
      <title>Graphing Change Vs Cyclomatic Complexity</title>
      <link>https://charltonaustin.com/posts/graphing-change-vs-cyclomatic-complexity/</link>
      <pubDate>Mon, 10 Jun 2019 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/graphing-change-vs-cyclomatic-complexity/</guid>
      <description>The problem You want to know where you should be refactoring, and you are not sure where to start. Or, you would like to better understand why you have more bugs in one part of the code than another.
One approach One thing that I like to look at when this happens is cyclomatic complexity. That often isn&amp;rsquo;t enough to get the full picture of what is happening with code. Another place I like to look is how often a file is changing.</description>
    </item>
    
    <item>
      <title>Euler Problem 010</title>
      <link>https://charltonaustin.com/posts/euler-problem-010/</link>
      <pubDate>Fri, 19 Apr 2019 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/euler-problem-010/</guid>
      <description>The problem The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.
73167176531330624919225119674426574742355349194934 96983520312774506326239578318016984801869478851843 85861560789112949495459501737958331952853208805511 12540698747158523863050715693290963295227443043557 66896648950445244523161731856403098711121722383113 62229893423380308135336276614282806444486645238749 30358907296290491560440772390713810515859307960866 70172427121883998797908792274921901699720888093776 65727333001053367881220235421809751254540594752243 52584907711670556013604839586446706324415722155397 53697817977846174064955149290862569321978468622482 83972241375657056057490261407972968652414535100474 82166370484403199890008895243450658541227588666881 16427171479924442928230863465674813919123162824586 17866458359124566529476545682848912883142607690042 24219022671055626321111109370544217506941658960408 07198403850962455444362981230987879927244284909188 84580156166097919133875499200524063689912560717606 05886116467109405077541002256983155200055935729725 71636269561882670428252483600823257530420752963450
Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?
Solution This guy is a straightforward fun warm up for the day.</description>
    </item>
    
    <item>
      <title>Euler Problem 009</title>
      <link>https://charltonaustin.com/posts/euler-problem-009/</link>
      <pubDate>Wed, 06 Mar 2019 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/euler-problem-009/</guid>
      <description>The problem A Pythagorean triplet is a set of three natural numbers, a &amp;lt; b &amp;lt; c, for which, a^2 + b^2 = c^2
For example, 32 + 42 = 9 + 16 = 25 = 52.
There exists exactly one Pythagorean triplet for which a + b + c = 1000. Find the product abc.
Solution This solution is straight forward. We satisfy the constraint that a &amp;lt; b &amp;lt; c by incrementing up by one in each variable and then we search for the solution.</description>
    </item>
    
    <item>
      <title>Election Results 2018</title>
      <link>https://charltonaustin.com/posts/election-results-2018/</link>
      <pubDate>Mon, 10 Dec 2018 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/election-results-2018/</guid>
      <description>Election 2018 The Tuesday Company had the honor to work on many races over the midterm elections. The team worked incredibly hard and managed to help in over 118 different races. We had a chance to scale our technology on a national level and managed to have no production issues despite having an large magnitude of increased traffic. We also learned some valuable lessons about what it means for a team to grow; both in the number of developers and in the number of users.</description>
    </item>
    
    <item>
      <title>Load And Performance Testing With Flask</title>
      <link>https://charltonaustin.com/posts/load-and-performance-testing-with-flask/</link>
      <pubDate>Tue, 13 Nov 2018 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/load-and-performance-testing-with-flask/</guid>
      <description>The problem At my current gig, we&amp;rsquo;ve spent some time building out our initial product. Things have been going well, and we have been growing. These days we started to notice that some over our API endpoints weren&amp;rsquo;t as responsive as before. We&amp;rsquo;ve also started to increase our number of users significantly. To that end, it was time for us to start measuring our requests and fixing them if necessary.</description>
    </item>
    
    <item>
      <title>Branch By Abstraction</title>
      <link>https://charltonaustin.com/posts/branch-by-abstraction/</link>
      <pubDate>Mon, 07 May 2018 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/branch-by-abstraction/</guid>
      <description>The problem I want to write code that is consistently shared with the rest of the team, but I also want trunk based development.
What is branch by abstraction Paul Hammant a friend and mentor of mine, has two great articles explaining branch by abstraction here and here. The basic concept is pretty easy. Instead of having long lived branches in your version control system, you simply create an abstraction that allows you to change the behavior with only a few minor changes.</description>
    </item>
    
    <item>
      <title>Euler Problem 008</title>
      <link>https://charltonaustin.com/posts/euler-problem-008/</link>
      <pubDate>Mon, 02 Apr 2018 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/euler-problem-008/</guid>
      <description>The problem The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.
73167176531330624919225119674426574742355349194934 96983520312774506326239578318016984801869478851843 85861560789112949495459501737958331952853208805511 12540698747158523863050715693290963295227443043557 66896648950445244523161731856403098711121722383113 62229893423380308135336276614282806444486645238749 30358907296290491560440772390713810515859307960866 70172427121883998797908792274921901699720888093776 65727333001053367881220235421809751254540594752243 52584907711670556013604839586446706324415722155397 53697817977846174064955149290862569321978468622482 83972241375657056057490261407972968652414535100474 82166370484403199890008895243450658541227588666881 16427171479924442928230863465674813919123162824586 17866458359124566529476545682848912883142607690042 24219022671055626321111109370544217506941658960408 07198403850962455444362981230987879927244284909188 84580156166097919133875499200524063689912560717606 05886116467109405077541002256983155200055935729725 71636269561882670428252483600823257530420752963450 Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?
Solution This guy is a pretty fun warm up for the day.</description>
    </item>
    
    <item>
      <title>Euler Problem 007</title>
      <link>https://charltonaustin.com/posts/euler-problem-007/</link>
      <pubDate>Wed, 28 Mar 2018 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/euler-problem-007/</guid>
      <description>The problem By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see that the 6th prime is 13.
What is the 10001 prime number?
Solution Interestingly my first attempt was the good old Sieve of Eratosthenes. However I kept getting an out of memory error from JavaScript. I was using NPM 3.10.3 and would get a no free memory error after GC. My next attempt included going piece by piece and only keeping in memory as many of the composite numbers as necessary and re walking the primes.</description>
    </item>
    
    <item>
      <title>Pairing Vs Code Review</title>
      <link>https://charltonaustin.com/posts/pairing-vs-code-review/</link>
      <pubDate>Tue, 27 Mar 2018 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/pairing-vs-code-review/</guid>
      <description>Note This was written mostly immediately after I joined CoreOS and then updated this last week. I recently started working at CoreOS and one thing that they do there for every change of code is a code review. I have never had code reviews before. I&amp;rsquo;ve mostly worked in environments where I have paired directly with people. So I wanted to do a quick review on the differences between the two methods.</description>
    </item>
    
    <item>
      <title>Euler Problem 006</title>
      <link>https://charltonaustin.com/posts/euler-problem-006/</link>
      <pubDate>Fri, 23 Mar 2018 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/euler-problem-006/</guid>
      <description>The problem The sum of the squares of the first ten natural numbers is,
1^2 + 2^2 + &amp;hellip; + 10^2 = 385 The square of the sum of the first ten natural numbers is,
(1 + 2 + &amp;hellip; + 10)^2 = 552 = 3025 Hence the difference between the sum of the squares of the first ten natural numbers and the square of the sum is 3025 − 385 = 2640.</description>
    </item>
    
    <item>
      <title>Euler Problem 005</title>
      <link>https://charltonaustin.com/posts/euler-problem-005/</link>
      <pubDate>Thu, 22 Mar 2018 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/euler-problem-005/</guid>
      <description>The problem 2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.
What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?
Solution Now this guy is a higher order, functional dream. I first create a function that returns a function to see if a number is divisible by another number.</description>
    </item>
    
    <item>
      <title>Euler Problem 004</title>
      <link>https://charltonaustin.com/posts/euler-problem-004/</link>
      <pubDate>Mon, 27 Mar 2017 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/euler-problem-004/</guid>
      <description>The problem A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 × 99.
Find the largest palindrome made from the product of two 3-digit numbers.
Solution Now this guy is your daily warm up kind of easy. I created two functions. The first one simply checks a number to see if it is a palindrome. The second one accepts a number finds the largest multiplication combination that is a palindrome.</description>
    </item>
    
    <item>
      <title>Euler Problem 003</title>
      <link>https://charltonaustin.com/posts/euler-problem-003/</link>
      <pubDate>Sat, 18 Mar 2017 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/euler-problem-003/</guid>
      <description>The problem The prime factors of 13195 are 5, 7, 13 and 29.
What is the largest prime factor of the number 600851475143 ?
Solution This one took a bit longer than I expected. My fist attempt was pretty naive. The idea was generate all the primes less than the number and then check if the number is divisible by the prime. At the end we simple return the largest prime number that divides the number evenly.</description>
    </item>
    
    <item>
      <title>Euler Problem 002</title>
      <link>https://charltonaustin.com/posts/euler-problem-002/</link>
      <pubDate>Fri, 17 Mar 2017 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/euler-problem-002/</guid>
      <description>The problem Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, &amp;hellip;
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
Solution This is a pretty straight forward problem. We generate the the Fibonacci number and as we go we can check if it isEven keeping track of the sum.</description>
    </item>
    
    <item>
      <title>Euler Problem 001</title>
      <link>https://charltonaustin.com/posts/euler-problem-001/</link>
      <pubDate>Mon, 13 Mar 2017 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/euler-problem-001/</guid>
      <description>The problem If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000.
Solution The first algorithm is super straightforward. We want to simply loop over each number between the start and the end checking if the number is a multiple of 3 or 5 and then adding that to the sum.</description>
    </item>
    
    <item>
      <title>Creating A Web Api With Golang</title>
      <link>https://charltonaustin.com/posts/creating-a-web-api-with-golang/</link>
      <pubDate>Sat, 10 Sep 2016 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/creating-a-web-api-with-golang/</guid>
      <description>I had a chance for the first time in a while to write some Go. I was writing a simple web API that allowed a user to login with JWT. This blog post is going to be about some of the challenges I faced along the way. I also want to give some shout outs to other blogs that helped me get it written.
The IDE First let&amp;rsquo;s start with the IDE.</description>
    </item>
    
    <item>
      <title>A Review Of An Introduction To Programming In Go</title>
      <link>https://charltonaustin.com/posts/a-review-of-an-introduction-to-programming-in-go/</link>
      <pubDate>Fri, 02 Sep 2016 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/a-review-of-an-introduction-to-programming-in-go/</guid>
      <description>Recently I had a chance to write some Go code for the first time in a few years as part of the interview process at CoreOS. The challenge was actually really fun, but so as not to ruin surprise I won&amp;rsquo;t be talking about what I did during the challenge. Suffice it to say that I had a great experience, and whether or not I get the job at CoreOS I definitely enjoyed the interview process.</description>
    </item>
    
    <item>
      <title>Showcases And Why We Need Them</title>
      <link>https://charltonaustin.com/posts/showcases-and-why-we-need-them/</link>
      <pubDate>Sat, 27 Aug 2016 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/showcases-and-why-we-need-them/</guid>
      <description>The problem So my students are mostly awesome. We have come a long way. When we started most of them had not written any JavaScript. In the last few weeks they have been working on their final projects You can see them here, here, here, and here. One thing that they haven&amp;rsquo;t had a lot of experience with is how to put a whole project together. So we broke them into team and they are coming up with their own product to show future employers.</description>
    </item>
    
    <item>
      <title>Leaders In An Array In Clojure Basic Algorithms Part Four</title>
      <link>https://charltonaustin.com/posts/leaders-in-an-array-in-clojure-basic-algorithms-part-four/</link>
      <pubDate>Wed, 17 Aug 2016 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/leaders-in-an-array-in-clojure-basic-algorithms-part-four/</guid>
      <description>The problem Given an array of integers, print the leaders in the array. A leader is an element which is larger than all the elements in the array to its right.
Solution Is was my first attempt at coming up with a solution. Naturally I used recursion and simply walked down the array seeing if every element after it was the same.
The time complexity of this is O( n^2 ) which isn&amp;rsquo;t great.</description>
    </item>
    
    <item>
      <title>Binary Search Of Sorted Array In Clojure Basic Algorithms Part Three</title>
      <link>https://charltonaustin.com/posts/binary-search-of-sorted-array-in-clojure-basic-algorithms-part-three/</link>
      <pubDate>Wed, 03 Aug 2016 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/binary-search-of-sorted-array-in-clojure-basic-algorithms-part-three/</guid>
      <description>The problem Find an element in a sorted array using binary search
The solution The solution is pretty straight forward. I added in some printlns to get a sense of how we drill down in the recursion to find the element.
(defn binary-search [v value] (loop [low 0 high (dec (count v)) depth 0] (let [half-way (quot (+ high low) 2)] (do (println (str &amp;#34;half-way is &amp;#34; half-way)) (println (str &amp;#34;low is &amp;#34; low)) (println (str &amp;#34;high is &amp;#34; high)) (println (str &amp;#34;depth is &amp;#34; depth)) (if (&amp;lt;= high (inc low)) (cond (= value (v low)) low (= value (v high)) high :else nil) (let [middle (quot (+ low high) 2)] (if (&amp;lt; (v middle) value) (recur (inc middle) high (inc depth)) (recur low middle (inc depth))))))))) You can call the function like this:</description>
    </item>
    
    <item>
      <title>Permutations Of A String In Clojure Basic Algorithms Part Two</title>
      <link>https://charltonaustin.com/posts/permutations-of-a-string-in-clojure-basic-algorithms-part-two/</link>
      <pubDate>Wed, 27 Jul 2016 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/permutations-of-a-string-in-clojure-basic-algorithms-part-two/</guid>
      <description>The problem Find all permutations of a string
The solution My first solution is comes from Java and is a recursive solution.
(defn- perms [pre v] (let [n (count v)] (if (zero? n) nil (loop [i 0] (if (&amp;lt; i n) (do (perms (conj pre (nth v i)) (into [] (concat(first (split-at i v)) (second (split-at (inc i) v))))) (recur (inc i))) nil))))) It has some problems. It is recursive so vulnerable to stack overflow errors, but more than that it is pretty slow and not very idiomatic Clojure.</description>
    </item>
    
    <item>
      <title>Counting Frequencies Of Elements In An Array In Clojure Basic Algorithms Part One</title>
      <link>https://charltonaustin.com/posts/counting-frequencies-of-elements-in-an-array-in-clojure-basic-algorithms-part-one/</link>
      <pubDate>Wed, 20 Jul 2016 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/counting-frequencies-of-elements-in-an-array-in-clojure-basic-algorithms-part-one/</guid>
      <description>So I&amp;rsquo;m not a CS guy. I went to school for math and I became a programmer pretty late. I also never had the obligatory algorithms class. So I&amp;rsquo;m going to start a series where I explore some algorithms coding problems. The problem
So the coding challenge is given an array with N numbers m such that m &amp;lt; N and m is a natural number count the occurrences of m.</description>
    </item>
    
    <item>
      <title>Does Unit Testing Make Me Slower</title>
      <link>https://charltonaustin.com/posts/does-unit-testing-make-me-slower/</link>
      <pubDate>Tue, 12 Apr 2016 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/does-unit-testing-make-me-slower/</guid>
      <description>Say What? Recently I asked a coworker if a new application we were working to get into production had unit tests. His response was interesting. He said, &amp;ldquo;No, but it&amp;rsquo;s too early to have unit tests. The code hasn&amp;rsquo;t really settled and unit tests slow you down.&amp;rdquo;
My initial reaction in my head was &amp;ldquo;Whoa that&amp;rsquo;s silly&amp;rdquo;. But after some consideration and thinking about how code can be written, I&amp;rsquo;m beginning to see his point.</description>
    </item>
    
    <item>
      <title>Python Source Code Gems</title>
      <link>https://charltonaustin.com/posts/python-source-code-gems/</link>
      <pubDate>Mon, 04 Apr 2016 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/python-source-code-gems/</guid>
      <description>So fairly regularly I read about and dip into the python source code. For some reason there seems to be a great deal of beautiful and interesting code in both the c and the standard libraries and tests for python. The other day I was doing some reading about generators (I was thinking about how to marry the ideas of functional and object oriented programming) and I came across something that I found fascinating as well beautiful so I decided I should share it here on this silly little blog.</description>
    </item>
    
    <item>
      <title>Debugging Multi  Threaded Applications</title>
      <link>https://charltonaustin.com/posts/debugging-multi-threaded-applications/</link>
      <pubDate>Sat, 24 Oct 2015 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/debugging-multi-threaded-applications/</guid>
      <description>Recently I had debug a multithreaded application with some surprising results. Seeing as this can be a particularly tricky task for people that haven&amp;rsquo;t done it before I thought I would write about some lessons I learned from the experience.
logging Logging LOGGING and MORE LOGGING Log to understand the problem. This one is hard to set up retroactively, but it is well worth the effort. Strive for logs that are meaningful, and that give you checkpoints.</description>
    </item>
    
    <item>
      <title>Feature Branches To Mainline</title>
      <link>https://charltonaustin.com/posts/feature-branches-to-mainline/</link>
      <pubDate>Sat, 10 Oct 2015 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/feature-branches-to-mainline/</guid>
      <description>Recently at my current company my team has been struggling to move from a feature branch workflow to a mainline workflow. I&amp;rsquo;m going to define what the feature branches and mainline workflows are. Then I&amp;rsquo;m going to talk about the costs and benefits of both models. Finally I&amp;rsquo;m going to talk about why people should use the mainline workflow.
Feature Branch Workflow So what is the feature branch workflow (at least at IntentMedia).</description>
    </item>
    
    <item>
      <title>Making Pairing Comfortable</title>
      <link>https://charltonaustin.com/posts/making-pairing-comfortable/</link>
      <pubDate>Sat, 26 Sep 2015 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/making-pairing-comfortable/</guid>
      <description>There are effectively (to me anyways) an infinite number of blog posts about the benefits and costs of pairing and what pairing is and isn&amp;rsquo;t. So I&amp;rsquo;m not going to talk about the good and bad of pairing. I&amp;rsquo;m going to assume that, like me, you want to pair and you see the benefits and costs. Instead today I&amp;rsquo;m going to talk about how I started experimenting with pairing at my most recent job.</description>
    </item>
    
    <item>
      <title>Refactoring Tests For Maintainability</title>
      <link>https://charltonaustin.com/posts/refactoring-tests-for-maintainability/</link>
      <pubDate>Wed, 28 Jan 2015 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/refactoring-tests-for-maintainability/</guid>
      <description>I just began working at Intent Media and I&amp;rsquo;ve been spending some time getting to know the code base. I spent the other day pairing with another guy on the team to add a new feature. We needed to change one of the data models by adding a new field. So we wrote some tests specifying how we thought the new data field should work. Next we got them passing. After that we ran all the unit tests.</description>
    </item>
    
    <item>
      <title>Clojure Web Scraper</title>
      <link>https://charltonaustin.com/posts/clojure-web-scraper/</link>
      <pubDate>Fri, 01 Mar 2013 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/clojure-web-scraper/</guid>
      <description>Okay so another thing that I did this week was go to a clojure meet up. I really enjoyed it. There I met some really cool people like Anthony from WalmartLabs. In the end we created a hacker news scraper from scratch in a couple of hours. So here is a brief tutorial on how we did it. (Note I&amp;rsquo;m not that great with Clojure yet thought I do think it is rather awesome.</description>
    </item>
    
    <item>
      <title>Frank Cucumber</title>
      <link>https://charltonaustin.com/posts/frank-cucumber/</link>
      <pubDate>Sun, 17 Feb 2013 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/frank-cucumber/</guid>
      <description>Starting my blog again. So my blog has hopelessly become out of date. Since the last time I posted I&amp;rsquo;ve started working for ThoughtWorks, gone to India, moved to San Francisco, and finally been put onto my client. Great so now what. Since things are finally starting to settle and since my thoughts have changed on maintaining a blog I&amp;rsquo;ve decided it&amp;rsquo;s time to start blogging again. Not that anyone has read anything yet.</description>
    </item>
    
  </channel>
</rss>