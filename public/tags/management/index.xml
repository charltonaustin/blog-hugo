<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>management on Charlton Austin</title>
    <link>https://charltonaustin.com/tags/management/</link>
    <description>Recent content in management on Charlton Austin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 21 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://charltonaustin.com/tags/management/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Failure is Inevitable</title>
      <link>https://charltonaustin.com/posts/failure-is-inevitable/</link>
      <pubDate>Tue, 21 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://charltonaustin.com/posts/failure-is-inevitable/</guid>
      <description>Failure is Inevitable Dealing with failure is an inevitable part of life, especially when you&amp;rsquo;re an entrepreneur. While it can be tempting to try to avoid failure at all costs, the truth is that failure is an essential part of the learning process. By acknowledging our failures and learning from them, we can become better, more successful versions of ourselves.
How to learn from it In order to learn from failure, there are three things that we must do:</description>
    </item>
    
    <item>
      <title>Checklists Follow Up</title>
      <link>https://charltonaustin.com/checklists-follow-up/</link>
      <pubDate>Wed, 05 Aug 2020 10:17:05 -0500</pubDate>
      
      <guid>https://charltonaustin.com/checklists-follow-up/</guid>
      <description>Before I wrote about checklists, here. In it I talked about a dream.</description>
    </item>
    
    <item>
      <title>Maslow Hierarchy of An App</title>
      <link>https://charltonaustin.com/maslow-hierarchy-of-an-app/</link>
      <pubDate>Wed, 05 Aug 2020 10:17:05 -0500</pubDate>
      
      <guid>https://charltonaustin.com/maslow-hierarchy-of-an-app/</guid>
      <description>https://www.cbinsights.com/research/maslows-hierarchy-of-needs-startups/</description>
    </item>
    
    <item>
      <title>Points What Are They Good For</title>
      <link>https://charltonaustin.com/points-what-are-they-good-for/</link>
      <pubDate>Wed, 05 Aug 2020 10:17:05 -0500</pubDate>
      
      <guid>https://charltonaustin.com/points-what-are-they-good-for/</guid>
      <description>Should story points be tied to time I often hear people say story point shouldn&amp;rsquo;t be tied to time. Instead they should be based on complexity. This can be for a variety of reason. Here for instance three reasons are cited.
Some tasks are difficult to estimate precisely.
If one developer estimates a project but another completes the task, the estimate becomes invalid. The time needed to complete a task will vary based on a developer’s level of experience.</description>
    </item>
    
    <item>
      <title>Bugs In Software</title>
      <link>https://charltonaustin.com/posts/bugs-in-software/</link>
      <pubDate>Tue, 14 Jan 2020 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/bugs-in-software/</guid>
      <description>The Architecture of Open Source Applications If you haven&amp;rsquo;t seen or read The Architecture of Open Source Applications then you are missing out. Sure, it is a bit long. Also, each section is written by a different writer making it slightly inconsistent. But, there are gems throughout the book that make it worth the read.
One of the gems Here&amp;rsquo;s an example of one of the gems from the Berkeley DB section.</description>
    </item>
    
    <item>
      <title>The Importance Of History</title>
      <link>https://charltonaustin.com/posts/the-importance-of-history/</link>
      <pubDate>Tue, 10 Dec 2019 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/the-importance-of-history/</guid>
      <description>History, what is it good for? When I interview someone I often ask, &amp;ldquo;Where did object oriented programming (OOP) come from?&amp;rdquo; There generally isn&amp;rsquo;t a right or wrong answer to this in the interview. You can go look up whether a particular answer is consistent with what&amp;rsquo;s on the internet. However you could give several answers that would all be right. You might say, &amp;ldquo;it was pioneered in Sketchpad.&amp;rdquo; Or you might say, &amp;ldquo;it came out of the atom in LISP.</description>
    </item>
    
    <item>
      <title>Blameless Postmortems</title>
      <link>https://charltonaustin.com/posts/blameless-postmortems/</link>
      <pubDate>Mon, 14 Jan 2019 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/blameless-postmortems/</guid>
      <description>Subject Why should we have blameless postmortems?
Context I recently read a blog post about blameless postmortems from Etsy. In it there was a simple question about why software engineers shouldn&amp;rsquo;t be punished:
Why shouldn’t they be punished or reprimanded? Because an engineer who thinks they’re going to be reprimanded are disincentivized to give the details necessary to get an understanding of the mechanism, pathology, and operation of the failure. This lack of understanding of how the accident occurred all but guarantees that it will repeat.</description>
    </item>
    
    <item>
      <title>Developing Your Team</title>
      <link>https://charltonaustin.com/posts/developing-your-team/</link>
      <pubDate>Mon, 04 Jun 2018 09:03:54 -0400</pubDate>
      
      <guid>https://charltonaustin.com/posts/developing-your-team/</guid>
      <description>The problem You want to encourage people on your team to be the best they can be.
Some thoughts I&amp;rsquo;m a big reader. So the first thing I did when I came across this problem was to start a search on Amazon. Admittedly I only read a few books. I&amp;rsquo;m no guru. I don&amp;rsquo;t even think I&amp;rsquo;m that experienced. But I do think I&amp;rsquo;ve found a few strategies that have worked so far.</description>
    </item>
    
    <item>
      <title>Make it stick</title>
      <link>https://charltonaustin.com/make-it-stick/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://charltonaustin.com/make-it-stick/</guid>
      <description>The book Make It Stick is a brief review of the best methods for learning. The book starts out by giving a brief overview of how teachers have tried to teach in the past and then turns to evidence based methods backed by science today. There is some repetition in content, but I immediately tried to implement the practices in the book and found that it dramatically changed the way that I read and study.</description>
    </item>
    
  </channel>
</rss>
